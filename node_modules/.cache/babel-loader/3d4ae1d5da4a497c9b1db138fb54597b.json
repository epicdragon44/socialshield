{"ast":null,"code":"var _jsxFileName = \"/home/danielwei/Development/GitProjects/maskweaver/src/components/Home/index.js\";\nimport React from 'react';\nimport { withAuthorization } from '../Session';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    const usr = JSON.parse(localStorage.getItem('authUser'));\n    this.state = {\n      username: Object.values(usr).slice()[6],\n      // big blob of user data, variable names self explainable\n      email: Object.values(usr).slice()[1],\n      photos: Object.values(usr).slice()[2],\n      friends: Object.values(usr).slice()[3],\n      points: Object.values(usr).slice()[4]\n    };\n  }\n\n  componentDidMount() {\n    const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n\n    this.props.firebase.challenges().on('value', snapshot => {\n      const chal = snapshot.val();\n      const chalList = Object.keys(chal).map(key => ({ // stores list of challenges as well for ease of use\n        ...chal[key],\n        cid: key\n      }));\n      localStorage.setItem('courses', JSON.stringify(chalList)); // list of challenges is stored in item 'courses'\n\n      this.setState({\n        username: Object.values(usr).slice()[6],\n        // this is repeated elsewhere because I momentarily forgot how to code.\n        email: Object.values(usr).slice()[1],\n        photos: Object.values(usr).slice()[2],\n        friends: Object.values(usr).slice()[3],\n        points: Object.values(usr).slice()[4]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colorheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"Add Masks\")), /*#__PURE__*/React.createElement(Interactions, {\n      name: this.state.username,\n      photos: this.state.photos,\n      firebase: this.props.firebase,\n      points: this.props.points,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} // here for temporary reading. Feel free to copy methods from here to other places. All functions will be documented.\n\n\nclass Interactions extends React.Component {\n  constructor(props) {\n    super(props); // bind stuff here temporarily\n\n    this.handleChange = e => {\n      const image = e.target.files[0];\n      this.setState({\n        image\n      });\n      console.log(this.state.username); // sets the state to include the current file upon adding one\n    };\n\n    this.handleUpload = e => {\n      const image = this.state.image;\n      const uploadTask = this.props.firebase.storage.ref(`images/${image.name}`).put(image); // uploads image to firebase\n\n      uploadTask.on('state_changed', snapshot => {\n        // stores\n        const progress = Math.floor(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        }); // gives a number between 1-100 for percent done uploading\n\n        if (progress === 100) {}\n      }, error => {\n        console.log(error); // if upload errored\n      }, () => {\n        // finishes the function here, adds the url\n        // get the uploaded image url back\n        const link = uploadTask.snapshot.ref.getDownloadURL().then(url => {\n          console.log(url);\n          const newPhotos = Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[2];\n          newPhotos.push(url); // adds the url of the photo to be associated with the user\n\n          console.log(url);\n          const usr = JSON.parse(localStorage.getItem('authUser'));\n          this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n            photos: newPhotos.slice()\n          });\n        });\n      });\n      this.render();\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.state = {\n      username: Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[6],\n      image: null,\n      // image reference\n      url: '',\n      // database url\n      progress: 0 // progress of upload\n      // photos: [],\n\n    };\n  }\n\n  callBackOnUploadComplete() {\n    const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n\n    var ourphotos = Object.values(usr).slice()[2];\n    console.log(ourphotos);\n    const photoDisplay = [];\n    ourphotos.forEach(photoURL => {\n      if (!(photoURL === \"\")) {\n        console.log(\"hi there its \" + photoURL);\n        photoDisplay.push( /*#__PURE__*/React.createElement(\"img\", {\n          src: photoURL,\n          alt: \"Uploaded Images\",\n          height: \"300\",\n          width: \"400\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }));\n      }\n    });\n  }\n\n  // please ignore code repetitions. IDK how react works and asynchronous calls, so I just called the original everywhere.\n  render() {\n    // file button and upload button\n    var usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n\n    var ourphotos = Object.values(usr).slice()[2];\n    console.log(ourphotos);\n    var photoDisplay = [];\n    ourphotos.forEach(photoURL => {\n      if (!(photoURL === \"\")) {\n        console.log(\"hi there its \" + photoURL);\n        photoDisplay.push( /*#__PURE__*/React.createElement(\"img\", {\n          src: photoURL,\n          alt: \"Uploaded Images\",\n          height: \"300\",\n          width: \"400\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }));\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"upload-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, \"Choose a photo\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/maskweaver/src/components/Home/index.js"],"names":["React","withAuthorization","Home","Component","constructor","props","usr","JSON","parse","localStorage","getItem","state","username","Object","values","slice","email","photos","friends","points","componentDidMount","firebase","challenges","on","snapshot","chal","val","chalList","keys","map","key","cid","setItem","stringify","setState","render","Interactions","handleChange","e","image","target","files","console","log","handleUpload","uploadTask","storage","ref","name","put","progress","Math","floor","bytesTransferred","totalBytes","error","link","getDownloadURL","then","url","newPhotos","push","users","child","update","bind","callBackOnUploadComplete","ourphotos","photoDisplay","forEach","photoURL","condition","authUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEC,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CADD;AACgC;AACzCC,MAAAA,KAAK,EAAEH,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAFE;AAGTE,MAAAA,MAAM,EAAEJ,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAHC;AAITG,MAAAA,OAAO,EAAEL,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAJA;AAKTI,MAAAA,MAAM,EAAEN,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B;AALC,KAAb;AAQH;;AACDK,EAAAA,iBAAiB,GAAG;AAChB,UAAMd,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ,CADgB,CAC0C;;AAC1D,SAAKL,KAAL,CAAWgB,QAAX,CAAoBC,UAApB,GAAiCC,EAAjC,CAAoC,OAApC,EAA6CC,QAAQ,IAAI;AACrD,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACA,YAAMC,QAAQ,GAAGd,MAAM,CAACe,IAAP,CAAYH,IAAZ,EAAkBI,GAAlB,CAAsBC,GAAG,KAAK,EAAE;AAC7C,WAAGL,IAAI,CAACK,GAAD,CADoC;AAE3CC,QAAAA,GAAG,EAAED;AAFsC,OAAL,CAAzB,CAAjB;AAIArB,MAAAA,YAAY,CAACuB,OAAb,CAAqB,SAArB,EAAgCzB,IAAI,CAAC0B,SAAL,CAAeN,QAAf,CAAhC,EANqD,CAMM;;AAC3D,WAAKO,QAAL,CAAc;AACVtB,QAAAA,QAAQ,EAAEC,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CADA;AACgC;AAC1CC,QAAAA,KAAK,EAAEH,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAFG;AAGVE,QAAAA,MAAM,EAAEJ,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAHE;AAIVG,QAAAA,OAAO,EAAEL,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAJC;AAKVI,QAAAA,MAAM,EAAEN,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B;AALE,OAAd;AAQH,KAfD;AAiBH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAKI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWC,QAA/B;AAAyC,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWM,MAA5D;AAAoE,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWgB,QAAzF;AAAmG,MAAA,MAAM,EAAI,KAAKhB,KAAL,CAAWc,MAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AA5C8B,C,CA8CnC;;;AACA,MAAMiB,YAAN,SAA2BpC,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AAFe,SAgBnBgC,YAhBmB,GAgBJC,CAAC,IAAI;AAChB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACA,WAAKP,QAAL,CAAc;AAACK,QAAAA;AAAD,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhC,KAAL,CAAWC,QAAvB,EAHgB,CAGkB;AAErC,KArBkB;;AAAA,SAuCnBgC,YAvCmB,GAuCJN,CAAC,IAAI;AAChB,YAAMC,KAAK,GAAG,KAAK5B,KAAL,CAAW4B,KAAzB;AAEA,YAAMM,UAAU,GAAG,KAAKxC,KAAL,CAAWgB,QAAX,CAAoByB,OAApB,CAA4BC,GAA5B,CAAiC,UAASR,KAAK,CAACS,IAAK,EAArD,EAAwDC,GAAxD,CAA4DV,KAA5D,CAAnB,CAHgB,CAGuE;;AACvFM,MAAAA,UAAU,CAACtB,EAAX,CAAc,eAAd,EACKC,QAAD,IAAc;AAAE;AACZ,cAAM0B,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAAC6B,gBAAT,GAA0B7B,QAAQ,CAAC8B,UAApC,GAAgD,GAA3D,CAAjB;AACA,aAAKpB,QAAL,CAAc;AAACgB,UAAAA;AAAD,SAAd,EAFU,CAEiB;;AAC3B,YAAIA,QAAQ,KAAG,GAAf,EAAoB,CAEnB;AACJ,OAPL,EAQKK,KAAD,IAAW;AACPb,QAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ,EADO,CACa;AACvB,OAVL,EAWI,MAAM;AAAE;AACJ;AAEA,cAAMC,IAAI,GAAGX,UAAU,CAACrB,QAAX,CAAoBuB,GAApB,CAAwBU,cAAxB,GAAyCC,IAAzC,CAA+CC,GAAG,IAAI;AAC/DjB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACA,gBAAMC,SAAS,GAAG/C,MAAM,CAACC,MAAP,CAAcP,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAd,EAA4DK,KAA5D,GAAoE,CAApE,CAAlB;AACA6C,UAAAA,SAAS,CAACC,IAAV,CAAeF,GAAf,EAH+D,CAG1C;;AACrBjB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACA,gBAAMrD,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACA,eAAKL,KAAL,CAAWgB,QAAX,CAAoByC,KAApB,GAA4BC,KAA5B,CAAkClD,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAAlC,EAAiEiD,MAAjE,CAAwE;AACpE/C,YAAAA,MAAM,EAAE2C,SAAS,CAAC7C,KAAV;AAD4D,WAAxE;AAGH,SATY,CAAb;AAUP,OAxBD;AAyBA,WAAKoB,MAAL;AACH,KArEkB;;AAIf,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkB4B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKrB,YAAL,GAAoB,KAAKA,YAAL,CAAkBqB,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKtD,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAGC,MAAM,CAACC,MAAP,CAAcP,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAd,EAA4DK,KAA5D,GAAoE,CAApE,CADF;AAETwB,MAAAA,KAAK,EAAE,IAFE;AAEI;AACboB,MAAAA,GAAG,EAAE,EAHI;AAGA;AACTT,MAAAA,QAAQ,EAAE,CAJD,CAII;AACb;;AALS,KAAb;AAOH;;AASDgB,EAAAA,wBAAwB,GAAG;AACvB,UAAM5D,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ,CADuB,CACmC;;AAC1D,QAAIyD,SAAS,GAAGtD,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAAhB;AACA2B,IAAAA,OAAO,CAACC,GAAR,CAAYwB,SAAZ;AAEA,UAAMC,YAAY,GAAG,EAArB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBC,QAAQ,IAAI;AAC1B,UAAI,EAAEA,QAAQ,KAAG,EAAb,CAAJ,EAAsB;AAClB5B,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB2B,QAA9B;AACAF,QAAAA,YAAY,CAACP,IAAb,eACI;AAAK,UAAA,GAAG,EAAES,QAAV;AAAoB,UAAA,GAAG,EAAG,iBAA1B;AAA4C,UAAA,MAAM,EAAG,KAArD;AAA2D,UAAA,KAAK,EAAG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AACJ,KAPD;AAQH;;AAgCC;AAEFnC,EAAAA,MAAM,GAAI;AAAE;AACR,QAAI7B,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAV,CADM,CACkD;;AACxD,QAAIyD,SAAS,GAAGtD,MAAM,CAACC,MAAP,CAAcR,GAAd,EAAmBS,KAAnB,GAA2B,CAA3B,CAAhB;AACA2B,IAAAA,OAAO,CAACC,GAAR,CAAYwB,SAAZ;AAEA,QAAIC,YAAY,GAAG,EAAnB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBC,QAAQ,IAAI;AAC1B,UAAI,EAAEA,QAAQ,KAAG,EAAb,CAAJ,EAAsB;AAClB5B,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB2B,QAA9B;AACAF,QAAAA,YAAY,CAACP,IAAb,eACI;AAAK,UAAA,GAAG,EAAES,QAAV;AAAoB,UAAA,GAAG,EAAG,iBAA1B;AAA4C,UAAA,MAAM,EAAG,KAArD;AAA2D,UAAA,KAAK,EAAG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AACJ,KAPD;AASA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,QAAQ,EAAE,KAAKjC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI;AAAU,MAAA,KAAK,EAAI,KAAK1B,KAAL,CAAWuC,QAA9B;AAAwC,MAAA,GAAG,EAAG,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQI;AAAQ,MAAA,OAAO,EAAI,KAAKN,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAWS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXT,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,eAaS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbT,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADJ,CADJ;AAwBH;;AA/GsC;;AAoH3C,MAAM2B,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAevE,iBAAiB,CAACsE,SAAD,CAAjB,CAA6BrE,IAA7B,CAAf","sourcesContent":["import React from 'react';\n\nimport { withAuthorization } from '../Session';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        const usr = JSON.parse(localStorage.getItem('authUser'));\n        this.state = {\n            username: Object.values(usr).slice()[6], // big blob of user data, variable names self explainable\n            email: Object.values(usr).slice()[1],\n            photos: Object.values(usr).slice()[2],\n            friends: Object.values(usr).slice()[3],\n            points: Object.values(usr).slice()[4],\n        }\n\n    }\n    componentDidMount() {\n        const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n        this.props.firebase.challenges().on('value', snapshot => {\n            const chal = snapshot.val();\n            const chalList = Object.keys(chal).map(key => ({ // stores list of challenges as well for ease of use\n                ...chal[key],\n                cid: key,\n            }));\n            localStorage.setItem('courses', JSON.stringify(chalList)); // list of challenges is stored in item 'courses'\n            this.setState({\n                username: Object.values(usr).slice()[6],  // this is repeated elsewhere because I momentarily forgot how to code.\n                email: Object.values(usr).slice()[1],\n                photos: Object.values(usr).slice()[2],\n                friends: Object.values(usr).slice()[3],\n                points: Object.values(usr).slice()[4]\n\n            });\n        });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"colorheader\">\n                    <h1>Add Masks</h1>\n                </div>\n                \n                <Interactions name={this.state.username} photos={this.state.photos} firebase={this.props.firebase} points = {this.props.points}/>\n            </div>\n        );\n    }\n}\n// here for temporary reading. Feel free to copy methods from here to other places. All functions will be documented.\nclass Interactions extends React.Component {\n    constructor(props) {\n        super(props);\n        // bind stuff here temporarily\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n\n        this.state = {\n            username:  Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[6],\n            image: null, // image reference\n            url: '', // database url\n            progress: 0, // progress of upload\n            // photos: [],\n        }\n    }\n\n    handleChange = e => {\n        const image = e.target.files[0];\n        this.setState({image});\n        console.log(this.state.username); // sets the state to include the current file upon adding one\n\n    }\n\n    callBackOnUploadComplete() {\n        const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n        var ourphotos = Object.values(usr).slice()[2];\n        console.log(ourphotos);\n\n        const photoDisplay = [];\n        ourphotos.forEach(photoURL => {\n            if (!(photoURL===\"\")) {\n                console.log(\"hi there its \" + photoURL);\n                photoDisplay.push(\n                    <img src={photoURL} alt = \"Uploaded Images\" height = \"300\" width = \"400\" />\n                );\n            }\n        });\n    }\n\n    handleUpload = e => {\n        const image = this.state.image;\n\n        const uploadTask = this.props.firebase.storage.ref(`images/${image.name}`).put(image); // uploads image to firebase\n        uploadTask.on('state_changed',\n            (snapshot) => { // stores\n                const progress = Math.floor((snapshot.bytesTransferred/snapshot.totalBytes)*100);\n                this.setState({progress}); // gives a number between 1-100 for percent done uploading\n                if (progress===100) {\n\n                }\n            } ,\n            (error) => {\n                console.log(error); // if upload errored\n            },\n            () => { // finishes the function here, adds the url\n                // get the uploaded image url back\n\n                const link = uploadTask.snapshot.ref.getDownloadURL().then( url => {\n                    console.log(url);\n                    const newPhotos = Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[2];\n                    newPhotos.push(url); // adds the url of the photo to be associated with the user\n                    console.log(url);\n                    const usr = JSON.parse(localStorage.getItem('authUser'));\n                    this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n                        photos: newPhotos.slice(),\n                    });\n                });\n        });\n        this.render();\n    } // please ignore code repetitions. IDK how react works and asynchronous calls, so I just called the original everywhere.\n\n    render () { // file button and upload button\n        var usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n        var ourphotos = Object.values(usr).slice()[2];\n        console.log(ourphotos);\n\n        var photoDisplay = [];\n        ourphotos.forEach(photoURL => {\n            if (!(photoURL===\"\")) {\n                console.log(\"hi there its \" + photoURL);\n                photoDisplay.push(\n                    <img src={photoURL} alt = \"Uploaded Images\" height = \"300\" width = \"400\" />\n                );\n            }\n        });\n\n        return (\n            <div>\n                <center>\n                    <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn\">Choose a photo</button>\n                        <input type= \"file\" onChange={this.handleChange}/>\n                    </div>\n                    <br />\n                    <progress value = {this.state.progress} max = \"100\"/> \n                    <br />\n                    <button onClick = {this.handleUpload}>Upload</button>\n                    <br />\n                    \n                    <br/><br/>\n                    <hr />\n                    <br/><br/>\n                    {/* <img src={this.state.url} alt = \"Uploaded Images\" height = \"300\" width = \"400\" />  */}\n                    {/* TODO: How do we get a list of image links and display them?*/}\n                    {/* {this.props.photos.map(photo => <img src={photo} alt = \"Uploaded Images\" height = \"300\" width = \"400\" />)} */}\n                    <br/>\n                    \n                </center>\n            </div>\n        )\n    }\n\n}\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);"]},"metadata":{},"sourceType":"module"}