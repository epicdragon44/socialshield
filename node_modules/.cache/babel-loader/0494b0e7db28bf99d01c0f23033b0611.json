{"ast":null,"code":"var _jsxFileName = \"/home/danielwei/Development/GitProjects/maskweaver/src/components/Session/withAuthorization.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      }, () => this.props.history.push(ROUTES.SIGN_IN));\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(AuthUserContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, authUser => condition(authUser) ? /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 47\n        }\n      })) : null);\n    }\n\n  }\n\n  return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/maskweaver/src/components/Session/withAuthorization.js"],"names":["React","withRouter","compose","AuthUserContext","withFirebase","ROUTES","withAuthorization","condition","Component","WithAuthorization","componentDidMount","listener","props","firebase","onAuthUserListener","authUser","history","push","SIGN_IN","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAChD,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC5CE,IAAAA,iBAAiB,GAAG;AAChB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,kBAApB,CACZC,QAAQ,IAAI;AACR,YAAI,CAACR,SAAS,CAACQ,QAAD,CAAd,EAA0B;AACtB,eAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B;AACH;AACJ,OALW,EAMZ,MAAM,KAAKN,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B,CANM,CAAhB;AAQH;;AAEDC,IAAAA,oBAAoB,GAAG;AACnB,WAAKR,QAAL;AACH;;AAEDS,IAAAA,MAAM,GAAG;AACL,0BACI,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,QAAQ,IACLR,SAAS,CAACQ,QAAD,CAAT,gBAAsB,oBAAC,SAAD,oBAAe,KAAKH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB,GAAsD,IAF9D,CADJ;AAOH;;AAxB2C;;AA2BhD,SAAOV,OAAO,CACVD,UADU,EAEVG,YAFU,CAAP,CAGLK,iBAHK,CAAP;AAIH,CAhCD;;AAkCA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.onAuthUserListener(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(ROUTES.SIGN_IN);\n                    }\n                },\n                () => this.props.history.push(ROUTES.SIGN_IN),\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}