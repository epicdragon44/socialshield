{"ast":null,"code":"var _jsxFileName = \"/home/danielwei/Development/GitProjects/maskweaver/src/components/Landing/index.js\";\nimport React from 'react';\nimport { withAuthorization } from '../Session';\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addCourse = nameOfCourse => {\n      //TODO: ACTUALLY ADD THE COURSE\n      var newCourses = this.state.arrCourses.slice();\n      newCourses.push(nameOfCourse);\n      this.setState({\n        arrCourses: newCourses.slice()\n      }, () => {\n        this.changeActiveCourse(nameOfCourse);\n      });\n      const usr = JSON.parse(localStorage.getItem('authUser'));\n      console.log(Object.values(usr).slice()[2]);\n      localStorage.setItem('authUser', JSON.stringify(usr));\n      console.log(Object.values(usr).slice()[2]);\n      this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n        courses: newCourses.slice()\n      });\n    };\n\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getFriends = this.getFriends.bind(this); // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  } // handleSubmit(event) { \n  //     event.preventDefault();\n  // }\n\n\n  getFriends() {\n    //TODO: RETURN AN ARRAY OF FRIEND OBJECTS FROM THE DATABASE FOR THE CURRENT USER\n    //each object should contain a name, which corresponds to a string, and a pointCount, which corresponds to an int\n    //{ name: \"Bob\", pointCount: 15 }\n    //the return statement below is just dummy code. pls remove\n    return [{\n      name: \"Bob\",\n      pointCount: 0\n    }, {\n      name: \"Derek\",\n      pointCount: 15\n    }, {\n      name: \"Jessica\",\n      pointCount: -3\n    }, {\n      name: \"Bob\",\n      pointCount: 0\n    }, {\n      name: \"Bob\",\n      pointCount: 0\n    }];\n  }\n\n  render() {\n    const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n\n    var username = Object.values(usr).slice()[6];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colorheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Friends\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colorheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Add a Friend\")), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NameForm, {\n      addCourse: this.addCourse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colorheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Friend Activity\")), this.getFriends().slice().map(friend => /*#__PURE__*/React.createElement(Friend, {\n      name: friend.name,\n      pointCount: friend.pointCount,\n      currentUser: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    //plugs into the backend to add the course, and passes the function on up for the main container to do the re-rendering\n    let shouldAddCourse = false; //TODO: MAKE THIS CODE CHECK THAT THE DATABASE CONTAINS SUCH A UID\n\n    const allCourses = JSON.parse(localStorage.getItem('courses'));\n\n    for (let i = 0, len = allCourses.length; i < len; ++i) {\n      var course = allCourses[i];\n\n      if (course.CourseName === this.state.value) {\n        shouldAddCourse = true;\n      }\n    }\n\n    if (shouldAddCourse) {\n      this.props.addCourse(this.state.value);\n    } else {\n      alert('Sorry, ID not found');\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Enter Friend ID below:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"nicesubmit\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction Friend(props) {\n  const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n\n  var msg = \"\";\n  var diff = 0;\n  var attribute = \"friend\";\n  var myPts = Object.values(usr).slice()[4];\n\n  if (myPts > props.pointCount) {\n    diff = myPts - props.pointCount;\n    attribute += \"green\";\n    msg = /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, \"Congrats!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 22\n      }\n    }), \" You have \", diff, \" more points!\");\n  } else if (myPts < props.pointCount) {\n    diff = props.pointCount - myPts;\n    attribute += \"red\";\n    msg = /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, \"You're behind!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }\n    }), \" Your friend has \", diff, \" more points!\");\n  } else {\n    msg = /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"You're tied for \", myPts, \" points!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 48\n      }\n    }), \" See if you can pull ahead!\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: attribute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"colorheadernospace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, props.pointCount, \" points\"), msg));\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Landing);","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/maskweaver/src/components/Landing/index.js"],"names":["React","withAuthorization","Landing","Component","constructor","props","addCourse","nameOfCourse","newCourses","state","arrCourses","slice","push","setState","changeActiveCourse","usr","JSON","parse","localStorage","getItem","console","log","Object","values","setItem","stringify","firebase","users","child","update","courses","value","handleChange","bind","getFriends","event","target","name","pointCount","render","username","map","friend","NameForm","handleSubmit","shouldAddCourse","allCourses","i","len","length","course","CourseName","alert","preventDefault","Friend","msg","diff","attribute","myPts","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { withAuthorization } from '../Session';\n\nclass Landing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.getFriends = this.getFriends.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {    this.setState({value: event.target.value});  }\n\n    // handleSubmit(event) { \n        \n    //     event.preventDefault();\n    // }\n\n    addCourse = (nameOfCourse) => { //TODO: ACTUALLY ADD THE COURSE\n        var newCourses = this.state.arrCourses.slice();\n        newCourses.push(nameOfCourse);\n        this.setState({\n            arrCourses: newCourses.slice(),\n        }, () => {this.changeActiveCourse(nameOfCourse);});\n        const usr = JSON.parse(localStorage.getItem('authUser'));\n        console.log(Object.values(usr).slice()[2]);\n        localStorage.setItem('authUser', JSON.stringify(usr));\n        console.log(Object.values(usr).slice()[2]);\n        this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n            courses: newCourses.slice(),\n        });\n    }\n\n    getFriends() { //TODO: RETURN AN ARRAY OF FRIEND OBJECTS FROM THE DATABASE FOR THE CURRENT USER\n        //each object should contain a name, which corresponds to a string, and a pointCount, which corresponds to an int\n        //{ name: \"Bob\", pointCount: 15 }\n        //the return statement below is just dummy code. pls remove\n        return [{ name: \"Bob\", pointCount: 0 }, { name: \"Derek\", pointCount: 15 }, { name: \"Jessica\", pointCount: -3 }, { name: \"Bob\", pointCount: 0 }, { name: \"Bob\", pointCount: 0 },];\n    }\n\n    render() {\n        const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n        var username = Object.values(usr).slice()[6];\n        \n        return (\n            <div>\n                <div className=\"colorheader\">\n                    <h1>Friends</h1>\n                </div>\n                <hr />\n                <div className=\"colorheader\">\n                    <h2>Add a Friend</h2>\n                </div>\n                <center>\n                    {/* <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Enter the Friend's ID:<br />\n                            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                        </label>\n                        <br />\n                        <input className = \"nicesubmit\" type=\"submit\" value=\"Submit\" />\n                    </form> */}\n                    <NameForm addCourse={this.addCourse}/>\n                </center>\n                <hr />\n                <div className=\"colorheader\">\n                    <h2>Friend Activity</h2>\n                </div>\n                {this.getFriends().slice().map(\n                    friend =>\n                    <Friend \n                        name={friend.name}\n                        pointCount={friend.pointCount}\n                        currentUser={username}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nclass NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {    this.setState({value: event.target.value});  }\n\n    handleSubmit(event) { //plugs into the backend to add the course, and passes the function on up for the main container to do the re-rendering\n        let shouldAddCourse = false;\n\n        //TODO: MAKE THIS CODE CHECK THAT THE DATABASE CONTAINS SUCH A UID\n        const allCourses = JSON.parse(localStorage.getItem('courses')); \n        for (let i = 0, len = allCourses.length; i < len; ++i) {\n            var course = allCourses[i];\n            if (course.CourseName === this.state.value) {\n                shouldAddCourse = true;\n            }\n        }\n\n        if (shouldAddCourse) {\n            this.props.addCourse(this.state.value);\n        } else {\n            alert('Sorry, ID not found');\n        }\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Enter Friend ID below:<br /><br />\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <br /><br />\n                <input className = \"nicesubmit\" type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n\nfunction Friend(props) {\n    const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n\n    var msg = \"\";\n    var diff = 0;\n    var attribute = \"friend\";\n    var myPts = Object.values(usr).slice()[4];\n    if (myPts > props.pointCount) {\n        diff = myPts - props.pointCount;\n        attribute+=\"green\";\n        msg = (\n        <h4>Congrats!<br /> You have {diff} more points!</h4>\n        );\n    }\n    else if (myPts < props.pointCount) {\n        diff = props.pointCount - myPts;\n        attribute+=\"red\";\n        msg = (\n        <h4>You're behind!<br /> Your friend has {diff} more points!</h4>\n        );\n    }\n    else {\n        msg = (\n            <h4>You're tied for {myPts} points!<br /> See if you can pull ahead!</h4>\n        );\n    }\n\n    return (\n        <div className={attribute}>\n            <div className=\"colorheadernospace\">\n                <h2>{props.name}</h2>\n                <h3>{props.pointCount} points</h3>\n                {msg}\n            </div>\n        </div>\n    );\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Landing);"]},"metadata":{},"sourceType":"module"}