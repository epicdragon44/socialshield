{"ast":null,"code":"var _jsxFileName = \"/home/danielwei/Development/GitProjects/maskweaver/src/components/Home/index.js\";\nimport React from 'react';\nimport { withAuthorization } from '../Session';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    const usr = JSON.parse(localStorage.getItem('authUser'));\n    this.state = {\n      username: Object.values(usr).slice()[6],\n      // big blob of user data, variable names self explainable\n      email: Object.values(usr).slice()[1],\n      photos: Object.values(usr).slice()[2],\n      friends: Object.values(usr).slice()[3],\n      points: Object.values(usr).slice()[4]\n    };\n  }\n\n  componentDidMount() {\n    const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n\n    this.props.firebase.challenges().on('value', snapshot => {\n      const chal = snapshot.val();\n      const chalList = Object.keys(chal).map(key => ({ // stores list of challenges as well for ease of use\n        ...chal[key],\n        cid: key\n      }));\n      localStorage.setItem('courses', JSON.stringify(chalList)); // list of challenges is stored in item 'courses'\n\n      this.setState({\n        username: Object.values(usr).slice()[6],\n        // this is repeated elsewhere because I momentarily forgot how to code.\n        email: Object.values(usr).slice()[1],\n        photos: Object.values(usr).slice()[2],\n        friends: Object.values(usr).slice()[3],\n        points: Object.values(usr).slice()[4],\n        uid: Object.values(usr).slice()[4]\n      });\n    });\n    this.props.firebase.users().on('value', snapshot => {\n      const userObject = snapshot.val();\n      const userList = Object.keys(userObject).map(key => ({ ...userObject[key],\n        uid: key\n      }));\n      localStorage.setItem('users', JSON.stringify(userList));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colorheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"Add Masks\")), /*#__PURE__*/React.createElement(Interactions, {\n      name: this.state.username,\n      photos: this.state.photos,\n      firebase: this.props.firebase,\n      points: this.props.points,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} // here for temporary reading. Feel free to copy methods from here to other places. All functions will be documented.\n\n\nclass Interactions extends React.Component {\n  constructor(props) {\n    super(props); // bind stuff here temporarily\n\n    this.handleChange = e => {\n      const image = e.target.files[0];\n      this.setState({\n        image\n      });\n      console.log(this.state.username); // sets the state to include the current file upon adding one\n    };\n\n    this.handleUpload = e => {\n      //upload this.state.numOfMasks (int) as points, and this.state.checkBoxValue (boolean) indicates whether the \"donated\" box is checked (if the masks have already been donated, we should use that as like a points multipler)\n      //to help, this.props.name should store the current username, this.props.firebase should let you access firebase.\n      // this.props.points should theoretically count the current number of points, but i literally don't touch it at all so its probably best not to use it and instead use the database point counter entirely\n      const usr = JSON.parse(localStorage.getItem('authUser'));\n      var newPoints = parseInt(Object.values(usr).slice()[4]);\n      console.log('I have ' + newPoints);\n      newPoints += Number(this.state.numOfMasks);\n\n      if (this.state.checkBoxValue) {\n        newPoints += Number(this.state.numOfMasks);\n      }\n\n      console.log('Now I have ' + newPoints);\n      this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n        points: newPoints\n      }); //Below is image rendering, don't touch\n\n      const image = this.state.image;\n      const uploadTask = this.props.firebase.storage.ref(`images/${image.name}`).put(image); // uploads image to firebase\n\n      uploadTask.on('state_changed', snapshot => {\n        // stores\n        const progress = Math.floor(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        }); // gives a number between 1-100 for percent done uploading\n      }, error => {\n        console.log(error); // if upload errored\n      }, () => {\n        // finishes the function here, adds the url\n        // get the uploaded image url back\n        const link = uploadTask.snapshot.ref.getDownloadURL().then(url => {\n          console.log(url);\n\n          if (!this.state.photos.includes(url)) {\n            var newArray = this.state.photos.slice();\n            newArray.push(url);\n            this.setState({\n              photos: newArray\n            });\n          }\n\n          const newPhotos = Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[2];\n          newPhotos.push(url); // adds the url of the photo to be associated with the user\n\n          console.log(url);\n\n          if (!this.state.photos.includes(url)) {\n            var newArray = this.state.photos.slice();\n            newArray.push(url);\n            this.setState({\n              photos: newArray\n            });\n          }\n\n          const usr = JSON.parse(localStorage.getItem('authUser'));\n          this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n            photos: newPhotos.slice()\n          });\n          this.render();\n        });\n      });\n      window.location.reload();\n    };\n\n    this.masksOnChange = event => {\n      this.setState({\n        numOfMasks: event.target.value\n      });\n    };\n\n    this.toggleCheckboxValue = () => {\n      this.setState({\n        checkBoxValue: !this.state.checkboxValue\n      });\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.state = {\n      username: Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[6],\n      image: null,\n      // image reference\n      url: '',\n      // database url\n      progress: 0,\n      // progress of upload\n      photos: [],\n      numOfMasks: 0,\n      checkBoxValue: false\n    };\n  }\n\n  render() {\n    // file button and upload button\n    //images temporarily display\n    const {\n      numOfMasks,\n      checkBoxValue\n    } = this.state;\n    console.log('rendered');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"upload-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"Choose a photo\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"masksinput\",\n      name: \"numOfMasks\",\n      value: numOfMasks,\n      onChange: this.masksOnChange,\n      type: \"text\",\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"checkboxinput\",\n      type: \"checkbox\",\n      id: \"checkBoxValue\",\n      name: \"checkBoxValue\",\n      onChange: this.toggleCheckboxValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"horns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, \"Donated\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/maskweaver/src/components/Home/index.js"],"names":["React","withAuthorization","Home","Component","constructor","props","usr","JSON","parse","localStorage","getItem","state","username","Object","values","slice","email","photos","friends","points","componentDidMount","firebase","challenges","on","snapshot","chal","val","chalList","keys","map","key","cid","setItem","stringify","setState","uid","users","userObject","userList","render","Interactions","handleChange","e","image","target","files","console","log","handleUpload","newPoints","parseInt","Number","numOfMasks","checkBoxValue","child","update","uploadTask","storage","ref","name","put","progress","Math","floor","bytesTransferred","totalBytes","error","link","getDownloadURL","then","url","includes","newArray","push","newPhotos","window","location","reload","masksOnChange","event","value","toggleCheckboxValue","checkboxValue","bind","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { withAuthorization } from '../Session';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        const usr = JSON.parse(localStorage.getItem('authUser'));\n        this.state = {\n            username: Object.values(usr).slice()[6], // big blob of user data, variable names self explainable\n            email: Object.values(usr).slice()[1],\n            photos: Object.values(usr).slice()[2],\n            friends: Object.values(usr).slice()[3],\n            points: Object.values(usr).slice()[4],\n        }\n\n    }\n    componentDidMount() {\n        const usr = JSON.parse(localStorage.getItem('authUser')); // user's personal data is stored in 'authUser'\n        this.props.firebase.challenges().on('value', snapshot => {\n            const chal = snapshot.val();\n            const chalList = Object.keys(chal).map(key => ({ // stores list of challenges as well for ease of use\n                ...chal[key],\n                cid: key,\n            }));\n            localStorage.setItem('courses', JSON.stringify(chalList)); // list of challenges is stored in item 'courses'\n            this.setState({\n                username: Object.values(usr).slice()[6],  // this is repeated elsewhere because I momentarily forgot how to code.\n                email: Object.values(usr).slice()[1],\n                photos: Object.values(usr).slice()[2],\n                friends: Object.values(usr).slice()[3],\n                points: Object.values(usr).slice()[4],\n                uid: Object.values(usr).slice()[4],\n            });\n        });\n        this.props.firebase.users().on('value', snapshot => {\n            const userObject = snapshot.val();\n            const userList = Object.keys(userObject).map(key => ({\n                ...userObject[key],\n                uid: key,\n            }));\n            localStorage.setItem('users', JSON.stringify(userList));\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"colorheader\">\n                    <h1>Add Masks</h1>\n                </div>\n                \n                <Interactions name={this.state.username} photos={this.state.photos} firebase={this.props.firebase} points = {this.props.points}/>\n            </div>\n        );\n    }\n}\n// here for temporary reading. Feel free to copy methods from here to other places. All functions will be documented.\nclass Interactions extends React.Component {\n    constructor(props) {\n        super(props);\n        // bind stuff here temporarily\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n\n        this.state = {\n            username:  Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[6],\n            image: null, // image reference\n            url: '', // database url\n            progress: 0, // progress of upload\n            photos: [],\n\n            numOfMasks: 0,\n            checkBoxValue: false,\n        }\n    }\n\n    handleChange = e => {\n        const image = e.target.files[0];\n        this.setState({image});\n        console.log(this.state.username); // sets the state to include the current file upon adding one\n    }\n\n    handleUpload = e => {\n        //upload this.state.numOfMasks (int) as points, and this.state.checkBoxValue (boolean) indicates whether the \"donated\" box is checked (if the masks have already been donated, we should use that as like a points multipler)\n        //to help, this.props.name should store the current username, this.props.firebase should let you access firebase.\n        // this.props.points should theoretically count the current number of points, but i literally don't touch it at all so its probably best not to use it and instead use the database point counter entirely\n        const usr = JSON.parse(localStorage.getItem('authUser'));\n        var newPoints = parseInt(Object.values(usr).slice()[4]);\n        console.log('I have ' + newPoints);\n        newPoints += Number(this.state.numOfMasks);\n        if (this.state.checkBoxValue) {\n            newPoints += Number(this.state.numOfMasks);\n        }\n        console.log('Now I have ' + newPoints);\n        this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n            points: newPoints,\n        });\n        //Below is image rendering, don't touch\n\n        const image = this.state.image;\n\n        const uploadTask = this.props.firebase.storage.ref(`images/${image.name}`).put(image); // uploads image to firebase\n        uploadTask.on('state_changed',\n            (snapshot) => { // stores\n                const progress = Math.floor((snapshot.bytesTransferred/snapshot.totalBytes)*100);\n                this.setState({progress}); // gives a number between 1-100 for percent done uploading\n            } ,\n            (error) => {\n                console.log(error); // if upload errored\n            },\n            () => { // finishes the function here, adds the url\n                // get the uploaded image url back\n\n                const link = uploadTask.snapshot.ref.getDownloadURL().then( url => {\n                    console.log(url);\n                    if (!(this.state.photos.includes(url))) {\n                        var newArray = this.state.photos.slice();\n                        newArray.push(url);\n                        this.setState({\n                            photos: newArray,\n                        });\n                    }\n                    const newPhotos = Object.values(JSON.parse(localStorage.getItem('authUser'))).slice()[2];\n                    newPhotos.push(url); // adds the url of the photo to be associated with the user\n                    console.log(url);\n                    if (!(this.state.photos.includes(url))) {\n                        var newArray = this.state.photos.slice();\n                        newArray.push(url);\n                        this.setState({\n                            photos: newArray,\n                        });\n                    }\n                    const usr = JSON.parse(localStorage.getItem('authUser'));\n                    this.props.firebase.users().child(Object.values(usr).slice()[0]).update({\n                        photos: newPhotos.slice(),\n                    });\n                    this.render();\n                });\n        });\n\n        window.location.reload();\n    } // please ignore code repetitions. IDK how react works and asynchronous calls, so I just called the original everywhere.\n\n    masksOnChange = event => {\n        this.setState({ numOfMasks: event.target.value });\n    };\n\n    toggleCheckboxValue = () => {\n        this.setState({checkBoxValue: !this.state.checkboxValue});\n    };\n\n    render () { // file button and upload button\n        //images temporarily display\n        const { numOfMasks, checkBoxValue } = this.state;\n        console.log('rendered');\n        return (\n            <div>\n                <center>\n                    <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn\">Choose a photo</button>\n                        <input type= \"file\" onChange={this.handleChange}/>\n                    </div>\n                    <br />\n                    {/* <progress value = {this.state.progress} max = \"100\"/>  */}\n                    <input\n                        className=\"masksinput\"\n                        name=\"numOfMasks\"\n                        value={numOfMasks}\n                        onChange={this.masksOnChange}\n                        type=\"text\"\n                        placeholder=\"\"\n                    />\n                    <div>\n                        <input className=\"checkboxinput\" type=\"checkbox\" id=\"checkBoxValue\" name=\"checkBoxValue\" onChange={this.toggleCheckboxValue}/>\n                        <label for=\"horns\">Donated</label>\n                    </div>\n                    <br />\n                    <button onClick = {this.handleUpload}>Upload</button>\n                    <br />\n                    \n                    <br/><br/>\n                    {/* <hr />\n                    <br/> */}\n                    {/* <img src={this.state.url} alt = \"Uploaded Images\" height = \"300\" width = \"400\" />  */}\n                    {/* <center>Your Photo</center><br />\n                    <center>\n                        {this.state.photos.map(photo => <img src={photo} alt = \"Uploaded Images\" width = \"90%\" />)}\n                    </center> */}\n                    \n                    <br/>\n                    \n                </center>\n            </div>\n        )\n    }\n\n}\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);"]},"metadata":{},"sourceType":"module"}