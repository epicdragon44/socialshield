{"ast":null,"code":"var _jsxFileName = \"/home/danielwei/Development/GitProjects/maskweaver/src/components/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization } from '../Session';\nimport * as ROLES from '../../constants/roles';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n      const usersList = Object.keys(usersObject).map(key => ({ ...usersObject[key],\n        uid: key\n      }));\n      this.setState({\n        users: usersList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Admin\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"The Admin Page is accessible by every signed in admin user.\"), loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"Loading ...\"), /*#__PURE__*/React.createElement(UserList, {\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst UserList = ({\n  users\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }\n}, users.map(user => /*#__PURE__*/React.createElement(\"li\", {\n  key: user.uid,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }\n}, \"ID:\"), \" \", user.uid), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 11\n  }\n}, \"E-Mail:\"), \" \", user.email), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }\n}, \"Username:\"), \" \", user.username))));\n\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(withAuthorization(condition), withFirebase)(AdminPage);","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/maskweaver/src/components/Admin/index.js"],"names":["React","Component","compose","withFirebase","withAuthorization","ROLES","AdminPage","constructor","props","state","loading","users","componentDidMount","setState","firebase","on","snapshot","usersObject","val","usersList","Object","keys","map","key","uid","componentWillUnmount","off","render","UserList","user","email","username","condition","authUser","roles","includes","ADMIN"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization } from '../Session';\nimport * as ROLES from '../../constants/roles';\n\nclass AdminPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            users: [],\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true });\n\n        this.props.firebase.users().on('value', snapshot => {\n            const usersObject = snapshot.val();\n\n            const usersList = Object.keys(usersObject).map(key => ({\n                ...usersObject[key],\n                uid: key,\n            }));\n\n            this.setState({\n                users: usersList,\n                loading: false,\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        const { users, loading } = this.state;\n\n        return (\n            <div>\n                <h1>Admin</h1>\n                <p>\n                    The Admin Page is accessible by every signed in admin user.\n                </p>\n\n                {loading && <div>Loading ...</div>}\n\n                <UserList users={users} />\n            </div>\n        );\n    }\n}\n\nconst UserList = ({ users }) => (\n    <ul>\n        {users.map(user => (\n            <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n                <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n                <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n            </li>\n        ))}\n    </ul>\n);\n\nconst condition = authUser =>\n    authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(\n    withAuthorization(condition),\n    withFirebase,\n)(AdminPage);"]},"metadata":{},"sourceType":"module"}